@page "/counter"
@using Azure.Storage.Blobs
@using Azure.Storage.Queues
@inject ILogger<Counter> logger
@inject IConfiguration Configuration

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<p role="status">Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>
<button class="btn btn-primary" @onclick="MachEx">Mach error</button>


<button class="btn btn-primary" @onclick="UploadFile">Upload...</button>

<input type="text" @bind-value="@txt" > 
<button class="btn btn-primary" @onclick="SendMsg">Send msg</button>



@code {
    private int currentCount = 0;
    private string txt = "test120003";

    private void SendMsg()
    {
        
        var connectionString = Configuration.GetSection("AzureBlobStorage:ConnectionString").Value;

        var client = new QueueClient(connectionString, "msgs");

        client.SendMessage($"{txt} {DateTime.Now}");
    }
    private void UploadFile()
    {
        var filename = "TextFile.txt";

        var connectionString = Configuration.GetSection("AzureBlobStorage:ConnectionString").Value;
        var containerName = Configuration.GetSection("AzureBlobStorage:ContainerName").Value;

        var client = new BlobServiceClient(connectionString);

        var container = client.GetBlobContainerClient(containerName);

        container.UploadBlob(filename, File.OpenRead(filename));

    }


    private void MachEx()
    {
        try
        {
            throw new OutOfMemoryException();
        }
        catch (Exception ex)
        {
            logger.LogError("Schade: {ex}", ex);
        }

    }

    private void IncrementCount()
    {
        currentCount += 19;
        logger.LogInformation("Counter: {count}", currentCount);
    }
}
